// EPIDEMIC

agent person 10 {
	const speed = 5;
	variable angle: random(0, 2 * pi()) = angle + choice(-0.1, 0.1);

	variable x: random(50, 350) = (x + speed * cos(angle)) % 400;
	variable y: random(50, 350) = (y + speed * sin(angle)) % 400;

	const distance = 30;

	variable people: empty() = agents(person);
	dynamic close = filter(people => p => sqrt((p.x - x) * (p.x - x) + (p.y - y) * (p.y - y)) <= distance);
	dynamic closeInfected = filter(close => c => c.infected == true);

	const timespan = 50;
	variable remaining: timespan = if infected then remaining - 1 else timespan;
	const probability = 0.5;

	variable infected: choice(true, false) = (infected and remaining > 0) or (count(closeInfected) > 0 and random(0, 1) <= 1);

	dynamic alive = infected;
}

// AGENTS IN PROXIMITY OF POINTS

agent person 5 {
	const speed = 10;
	variable angle: 0 = angle + choice(-0.1, 0.1);

	variable x: 200 = (x + speed * cos(angle)) % 400;
	variable y: 200 = (y + speed * sin(angle)) % 400;

	const alive = false;
}

agent point 5 {
	
	const x = random(50, 350);
	const y = random(50, 350);

	const distance = 50;

	dynamic close = filter(agents(person) => p => sqrt((p.x - x) * (p.x - x) + (p.y - y) * (p.y - y)) <= distance);

	dynamic alive = count(close) > 0;
}